<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:aero8="clr-namespace:PresentationTheme.Aero.Win8"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">
  <!--<ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="AeroWin8/Common.xaml"/>
    <ResourceDictionary Source="AeroWin8/ListView.xaml"/>
    <ResourceDictionary Source="AeroWin8/Menu.xaml"/>
    <ResourceDictionary Source="AeroWin8/ScrollBar.xaml"/>
  </ResourceDictionary.MergedDictionaries>-->

  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle
            Margin="1"
            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
            StrokeThickness="1"
            StrokeDashArray="1 1"
            SnapsToDevicePixels="True"
            RenderOptions.EdgeMode="Aliased"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <SolidColorBrush x:Key="Button.Static.Border" Color="#FFACACAC"/>
  <LinearGradientBrush x:Key="Button.Static.Background" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStopCollection>
      <GradientStop Offset="0.000" Color="#FFF0F0F0"/>
      <GradientStop Offset="0.525" Color="#FFEAEAEA"/>
      <GradientStop Offset="1.055" Color="#FFE5E5E5"/>
    </GradientStopCollection>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF7EB4EA"/>
  <LinearGradientBrush x:Key="Button.MouseOver.Background" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStopCollection>
      <GradientStop Offset="0.0" Color="#FFECF4FC"/>
      <GradientStop Offset="0.5" Color="#FFE4F0FC"/>
      <GradientStop Offset="1.0" Color="#FFDCECFC"/>
    </GradientStopCollection>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF569DE5"/>
  <LinearGradientBrush x:Key="Button.Pressed.Background" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStopCollection>
      <GradientStop Offset="0.000" Color="#FFDAECFC"/>
      <!--<GradientStop Offset="0.500" Color="#FFCFE6FC"/>
      <GradientStop Offset="0.550" Color="#FFCEE5FC"/>-->
      <GradientStop Offset="0.50" Color="#FFCEE5FC"/>
      <GradientStop Offset="1.055" Color="#FFC4E0FC"/>
    </GradientStopCollection>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFD9D9D9"/>
  <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFEFEFEF"/>
  <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

  <SolidColorBrush x:Key="Button.Defaulted.Border" Color="#FF3399FF"/>
  <LinearGradientBrush x:Key="Button.Defaulted.Background" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStopCollection>
      <GradientStop Offset="0.000" Color="#FFF0F0F0"/>
      <GradientStop Offset="0.525" Color="#FFEAEAEA"/>
      <GradientStop Offset="1.055" Color="#FFE5E5E5"/>
    </GradientStopCollection>
  </LinearGradientBrush>

  <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="6,4,6,4"/>
    <Setter Property="MinWidth" Value="10"/>
    <Setter Property="MinHeight" Value="5"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border"
                  Background="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  SnapsToDevicePixels="True">
            <!--<VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition To="MouseOver" GeneratedDuration="0:0:0"/>
                  <VisualTransition To="Normal" GeneratedDuration="0:0:0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ColorAnimation Duration="0:0:0.5"
                                    Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="BorderBrush.Color"
                                    To="#FFACACAC"/>
                    <Aero2:LinearGradientBrushAnimation
                      Duration="0:0:0.5"
                      Storyboard.TargetName="border"
                      Storyboard.TargetProperty="Background"
                      From="{StaticResource Button.MouseOver.Background}"
                      To="{StaticResource Button.Static.Background}"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Duration="0:0:0.5"
                                    Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="BorderBrush.Color"
                                    To="#FF7EB4EA"/>
                    <Aero2:LinearGradientBrushAnimation
                      Duration="0:0:0.5"
                      Storyboard.TargetName="border"
                      Storyboard.TargetProperty="Background"
                      From="{StaticResource Button.Static.Background}"
                      To="{StaticResource Button.MouseOver.Background}"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>-->
            <ContentPresenter x:Name="contentPresenter"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Focusable="False">
            </ContentPresenter>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Background"
                      Value="{StaticResource Button.MouseOver.Background}"/>
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{StaticResource Button.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Background"
                      Value="{StaticResource Button.Pressed.Background}"/>
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{StaticResource Button.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="Background"
                      Value="{StaticResource Button.Disabled.Background}"/>
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{StaticResource Button.Disabled.Border}"/>
              <Setter TargetName="contentPresenter" Property="TextElement.Foreground"
                      Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type ToggleButton}"
         BasedOn="{StaticResource BaseButtonStyle}"
         TargetType="{x:Type ToggleButton}"/>

  <Style x:Key="{x:Type RepeatButton}"
         BasedOn="{StaticResource BaseButtonStyle}"
         TargetType="{x:Type RepeatButton}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
  </Style>

  <Style x:Key="{x:Type Button}"
         BasedOn="{StaticResource BaseButtonStyle}"
         TargetType="{x:Type Button}"/>


  <aero8:TypeOfConverter x:Key="TypeOfConverter"/>

  <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
  <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF979797"/>
  <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF000000"/>
  <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
  <SolidColorBrush x:Key="Menu.Static.Gutter" Color="#FFD7D7D7"/>
  <SolidColorBrush x:Key="Menu.Disabled.Background" Color="#3DD9D9D9"/>
  <SolidColorBrush x:Key="Menu.Disabled.Border" Color="#FFDADADA"/>
  <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
  <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D269FD9"/>
  <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
  <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#210083FF"/>
  <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#80006CD9"/>
  <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#3DD9D9D9"/>
  <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#FFDADADA"/>
  <SolidColorBrush x:Key="MenuBar.Static.Background" Color="#FFF5F6F7"/>
  <SolidColorBrush x:Key="MenuBar.Static.Border" Color="#FFE8E9EA"/>
  <SolidColorBrush x:Key="MenuBarItem.Pressed.Background" Color="#400080FF"/>
  <SolidColorBrush x:Key="MenuBarItem.Pressed.Border" Color="#99006CD9"/>

  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
  <Geometry x:Key="DownArrow">
    M 0,0 L 3.5,4 L 7,0 Z
  </Geometry>
  <Geometry x:Key="UpArrow">
    M 0,4 L 3.5,0 L 7,4 Z
  </Geometry>
  <Geometry x:Key="RightArrow">
    M 0,0 L 4,3.5 L 0,7 Z
  </Geometry>

  <Geometry x:Key="Checkmark">
    F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z
  </Geometry>

  <ControlTemplate x:Key="{ComponentResourceKey {x:Type FrameworkElement}, SubmenuContent}"
                   TargetType="{x:Type ContentControl}">
    <Border Background="{TemplateBinding Menu.Background}"
            BorderBrush="{TemplateBinding Menu.BorderBrush}"
            BorderThickness="1"
            Padding="2">
      <Border Background="{StaticResource Menu.Static.Background}">
        <ContentPresenter/>
      </Border>
    </Border>
  </ControlTemplate>

  <Style x:Key="MenuScrollButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="ClickMode" Value="Hover"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border x:Name="templateRoot"
                  SnapsToDevicePixels="True"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  BorderThickness="1">
            <ContentPresenter Margin="6"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{ComponentResourceKey {x:Type FrameworkElement}, MenuScrollViewer}"
         TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.Column="0" Grid.Row="1">
              <ScrollContentPresenter
                Margin="{TemplateBinding Padding}"
                CanContentScroll="{TemplateBinding CanContentScroll}"/>
            </Border>
            <RepeatButton Grid.Column="0"
                          Grid.Row="0"
                          Style="{StaticResource MenuScrollButton}"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Focusable="False">
              <RepeatButton.Visibility>
                <MultiBinding ConverterParameter="0"
                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility"
                           RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path Data="{StaticResource UpArrow}"
                    Fill="{StaticResource Menu.Static.Foreground}"/>
            </RepeatButton>
            <RepeatButton Grid.Column="0"
                          Grid.Row="2"
                          Style="{StaticResource MenuScrollButton}"
                          Command="{x:Static ScrollBar.LineDownCommand}"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          Focusable="False">
              <RepeatButton.Visibility>
                <MultiBinding ConverterParameter="100"
                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility"
                           RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path Data="{StaticResource DownArrow}"
                    Fill="{StaticResource Menu.Static.Foreground}"/>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{StaticResource Menu.Static.Separator}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Separator}"/>
    <Setter Property="MinHeight" Value="7"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Margin="28,3,0,3"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="{StaticResource Menu.Static.Separator}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Separator}"/>
    <Setter Property="MinHeight" Value="3"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Margin="28,1,0,1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="{ComponentResourceKey {x:Type MenuItem}, TopLevelItemTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot"
            SnapsToDevicePixels="True"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
      <Grid VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Width="16"
                          Height="16"
                          Margin="2"/>
        <Path x:Name="GlyphPanel"
              Data="{StaticResource Checkmark}"
              FlowDirection="LeftToRight"
              Margin="3"
              Visibility="Collapsed"
              VerticalAlignment="Center"
              Fill="{StaticResource Menu.Static.Foreground}"/>
        <ContentPresenter Grid.Column="1"
                          ContentSource="Header"
                          RecognizesAccessKey="True"
                          Margin="{TemplateBinding Padding}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                     Value="False"/>
          <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                     Value="False"/>
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.Setters>
          <Setter TargetName="templateRoot" Property="TextElement.Foreground"
                  Value="{StaticResource Menu.Disabled.Foreground}"/>
          <Setter TargetName="GlyphPanel" Property="Fill"
                  Value="{StaticResource Menu.Disabled.Foreground}"/>
        </MultiDataTrigger.Setters>
      </MultiDataTrigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="templateRoot" Property="Background"
                Value="{StaticResource MenuItem.Highlight.Background}"/>
        <Setter TargetName="templateRoot" Property="BorderBrush"
                Value="{StaticResource MenuItem.Highlight.Border}"/>
      </Trigger>
      <Trigger Property="IsSubmenuOpen" Value="True">
        <Setter TargetName="templateRoot" Property="Background"
                Value="{StaticResource MenuBarItem.Pressed.Background}"/>
        <Setter TargetName="templateRoot" Property="BorderBrush"
                Value="{StaticResource MenuBarItem.Pressed.Border}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter TargetName="templateRoot" Property="Background"
                Value="{StaticResource MenuBarItem.Pressed.Background}"/>
        <Setter TargetName="templateRoot" Property="BorderBrush"
                Value="{StaticResource MenuBarItem.Pressed.Border}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="templateRoot" Property="TextElement.Foreground"
                Value="{StaticResource Menu.Disabled.Foreground}"/>
        <Setter TargetName="GlyphPanel" Property="Fill"
                Value="{StaticResource Menu.Disabled.Foreground}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey {x:Type MenuItem}, TopLevelHeaderTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot"
            SnapsToDevicePixels="True"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
      <Grid VerticalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Width="16"
                          Height="16"
                          Margin="2"/>
        <Path x:Name="GlyphPanel"
              Data="{StaticResource Checkmark}"
              FlowDirection="LeftToRight"
              Margin="3"
              Visibility="Collapsed"
              VerticalAlignment="Center"
              Fill="{TemplateBinding Menu.Foreground}"/>
        <ContentPresenter Grid.Column="1"
                          ContentSource="Header"
                          RecognizesAccessKey="True"
                          Margin="{TemplateBinding MenuItem.Padding}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        <Popup x:Name="PART_Popup"
               AllowsTransparency="True"
               Focusable="False"
               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
               Placement="Bottom"
               PlacementTarget="{Binding ElementName=templateRoot}">
          <themes:SystemDropShadowChrome Name="Shdw" Color="Transparent">
            <Border x:Name="SubMenuBorder"
                    Background="{StaticResource Menu.Static.Background}"
                    BorderBrush="{StaticResource Menu.Static.Border}"
                    BorderThickness="1"
                    Padding="2">
              <ScrollViewer x:Name="SubMenuScrollViewer"
                            Style="{DynamicResource {ComponentResourceKey {x:Type FrameworkElement}, MenuScrollViewer}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle
                      Name="OpaqueRect"
                      Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                      Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                      Fill="{Binding Background, ElementName=SubMenuBorder}"/>
                  </Canvas>
                  <Rectangle HorizontalAlignment="Left"
                             Width="1"
                             Margin="27,0,0,0"
                             Fill="{StaticResource Menu.Static.Gutter}"/>
                  <ItemsPresenter x:Name="ItemsPresenter"
                                  KeyboardNavigation.DirectionalNavigation="Cycle"
                                  KeyboardNavigation.TabNavigation="Cycle"
                                  Grid.IsSharedSizeScope="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </themes:SystemDropShadowChrome>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
      </Trigger>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"
                     Value="False"/>
          <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                     Value="False"/>
        </MultiDataTrigger.Conditions>
        <MultiDataTrigger.Setters>
          <Setter TargetName="templateRoot" Property="TextElement.Foreground"
                  Value="{StaticResource Menu.Disabled.Foreground}"/>
          <Setter TargetName="GlyphPanel" Property="Fill"
                  Value="{StaticResource Menu.Disabled.Foreground}"/>
        </MultiDataTrigger.Setters>
      </MultiDataTrigger>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter TargetName="templateRoot" Property="Background"
                Value="{StaticResource MenuItem.Highlight.Background}"/>
        <Setter TargetName="templateRoot" Property="BorderBrush"
                Value="{StaticResource MenuItem.Highlight.Border}"/>
      </Trigger>
      <Trigger Property="IsSubmenuOpen" Value="True">
        <Setter TargetName="templateRoot" Property="Background"
                Value="{StaticResource MenuBarItem.Pressed.Background}"/>
        <Setter TargetName="templateRoot" Property="BorderBrush"
                Value="{StaticResource MenuBarItem.Pressed.Border}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter TargetName="templateRoot" Property="Background"
                Value="{StaticResource MenuBarItem.Pressed.Background}"/>
        <Setter TargetName="templateRoot" Property="BorderBrush"
                Value="{StaticResource MenuBarItem.Pressed.Border}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="templateRoot" Property="TextElement.Foreground"
                Value="{StaticResource Menu.Disabled.Foreground}"/>
        <Setter TargetName="GlyphPanel" Property="Fill"
                Value="{StaticResource Menu.Disabled.Foreground}"/>
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
        <Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
      </Trigger>
      <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="OpaqueRect" Property="Canvas.Top"
                Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
        <Setter TargetName="OpaqueRect" Property="Canvas.Left"
                Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey {x:Type MenuItem}, SubmenuItemTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot"
            SnapsToDevicePixels="True"
            Height="22"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" MinWidth="20" SharedSizeGroup="MenuItemIconColumnGroup"/>
          <ColumnDefinition Width="11"/>
          <ColumnDefinition Width="*" MinWidth="11"/>
          <ColumnDefinition Width="34"/>
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
          <ColumnDefinition Width="17" SharedSizeGroup="MenuItemArrowColumnGroup"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Left"
                          Width="16"
                          Height="16"
                          Margin="2"/>
        <Border x:Name="GlyphPanel"
                Visibility="Hidden"
                Height="22"
                Width="22"
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                Background="{StaticResource MenuItem.Selected.Background}"
                BorderBrush="{StaticResource MenuItem.Selected.Border}"
                BorderThickness="1"
                ClipToBounds="False"
                Margin="-1,-1,-1,-1">
          <Path x:Name="Glyph"
                Data="{StaticResource Checkmark}"
                FlowDirection="LeftToRight"
                Height="11"
                Width="10"
                Fill="{StaticResource Menu.Static.Foreground}"/>
        </Border>
        <Border x:Name="menuHeaderContainer"
                Grid.Column="2"
                Margin="0"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
          <ContentPresenter HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True"
                            Margin="{TemplateBinding MenuItem.Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <Border x:Name="menuGestureContainer" Grid.Column="4" Margin="0">
          <TextBlock Text="{TemplateBinding InputGestureText}"
                     Margin="{TemplateBinding MenuItem.Padding}"
                     VerticalAlignment="Center"/>
        </Border>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Header, RelativeSource={RelativeSource Self}, Converter={StaticResource TypeOfConverter}}"
                   Value="{x:Type System:String}">
        <Setter Property="FrameworkElement.Margin" TargetName="menuHeaderContainer" Value="0,-1,0,0"/>
        <Setter Property="FrameworkElement.Margin" TargetName="menuGestureContainer" Value="0,-1,0,0"/>
      </DataTrigger>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="templateRoot" Property="Background"
                Value="{StaticResource MenuItem.Highlight.Background}"/>
        <Setter TargetName="templateRoot" Property="BorderBrush"
                Value="{StaticResource MenuItem.Highlight.Border}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="templateRoot" Property="TextElement.Foreground"
                Value="{StaticResource Menu.Disabled.Foreground}"/>
        <Setter TargetName="Glyph" Property="Fill" Value="{StaticResource Menu.Disabled.Foreground}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <ControlTemplate x:Key="{ComponentResourceKey {x:Type MenuItem}, SubmenuHeaderTemplateKey}"
                   TargetType="{x:Type MenuItem}">
    <Border x:Name="templateRoot"
            SnapsToDevicePixels="True"
            Height="22"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" MinWidth="20" SharedSizeGroup="MenuItemIconColumnGroup"/>
          <ColumnDefinition Width="11"/>
          <ColumnDefinition Width="*" MinWidth="11"/>
          <ColumnDefinition Width="34"/>
          <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
          <ColumnDefinition Width="17" SharedSizeGroup="MenuItemArrowColumnGroup"/>
        </Grid.ColumnDefinitions>
        <ContentPresenter x:Name="Icon"
                          ContentSource="Icon"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          Width="16"
                          Height="16"
                          Margin="2"/>
        <Border x:Name="GlyphPanel"
                BorderThickness="1"
                Height="22"
                Width="22"
                Visibility="Hidden"
                VerticalAlignment="Center"
                Margin="-1,-1,-1,-1"
                BorderBrush="{StaticResource MenuItem.Highlight.Border}"
                Background="{StaticResource MenuItem.Highlight.Background}">
          <Path x:Name="Glyph"
                Data="{DynamicResource Checkmark}"
                FlowDirection="LeftToRight"
                Height="11"
                Width="9"
                Fill="{StaticResource Menu.Static.Foreground}"/>
        </Border>
        <Border x:Name="menuHeaderContainer"
                Grid.Column="2"
                Margin="0"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
          <ContentPresenter HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            RecognizesAccessKey="True"
                            Margin="{TemplateBinding MenuItem.Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <Border x:Name="menuGestureContainer" Grid.Column="4" Margin="0">
          <TextBlock Text="{TemplateBinding InputGestureText}"
                     Margin="{TemplateBinding MenuItem.Padding}"
                     VerticalAlignment="Center"/>
        </Border>
        <Path x:Name="RightArrow"
              Grid.Column="5"
              Data="{StaticResource RightArrow}"
              Margin="5,0,0,1"
              VerticalAlignment="Center"
              HorizontalAlignment="Left"
              Fill="{StaticResource Menu.Static.Foreground}"/>
        <Popup x:Name="PART_Popup"
               AllowsTransparency="True"
               Focusable="False"
               IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
               Placement="Right"
               HorizontalOffset="-2"
               VerticalOffset="-4">
          <themes:SystemDropShadowChrome Name="Shdw" Color="Transparent">
            <Border x:Name="SubMenuBorder"
                    Background="{StaticResource Menu.Static.Background}"
                    BorderBrush="{StaticResource Menu.Static.Border}"
                    BorderThickness="1"
                    Padding="2">
              <ScrollViewer x:Name="SubMenuScrollViewer"
                          Style="{DynamicResource {ComponentResourceKey {x:Type FrameworkElement}, MenuScrollViewer}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle
                      Name="OpaqueRect"
                      Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                      Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                      Fill="{Binding Background, ElementName=SubMenuBorder}"/>
                  </Canvas>
                  <Rectangle HorizontalAlignment="Left"
                             Width="1"
                             Margin="27,0,0,0"
                             Fill="{StaticResource Menu.Static.Gutter}"/>
                  <ItemsPresenter x:Name="ItemsPresenter"
                                  KeyboardNavigation.DirectionalNavigation="Cycle"
                                  KeyboardNavigation.TabNavigation="Cycle"
                                  Grid.IsSharedSizeScope="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </themes:SystemDropShadowChrome>
        </Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <DataTrigger Binding="{Binding Header, RelativeSource={RelativeSource Self}, Converter={StaticResource TypeOfConverter}}"
                   Value="{x:Type System:String}">
        <Setter TargetName="menuHeaderContainer" Property="FrameworkElement.Margin" Value="0,-1,0,0"/>
        <Setter TargetName="menuGestureContainer" Property="FrameworkElement.Margin" Value="0,-1,0,0"/>
      </DataTrigger>
      <Trigger Property="IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
      </Trigger>
      <Trigger Property="Icon" Value="{x:Null}">
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
        <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="IsHighlighted" Value="True">
        <Setter TargetName="templateRoot" Property="Background"
                Value="{StaticResource MenuItem.Highlight.Background}"/>
        <Setter TargetName="templateRoot" Property="BorderBrush"
                Value="{StaticResource MenuItem.Highlight.Border}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="templateRoot" Property="TextElement.Foreground"
                Value="{StaticResource Menu.Disabled.Foreground}"/>
        <Setter TargetName="Glyph" Property="Fill"
                Value="{StaticResource Menu.Disabled.Foreground}"/>
        <Setter TargetName="RightArrow" Property="Fill"
                Value="{StaticResource Menu.Disabled.Foreground}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsHighlighted" Value="True"/>
          <Condition Property="IsEnabled" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="templateRoot" Property="Background"
                Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
        <Setter TargetName="templateRoot" Property="BorderBrush"
                Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
      </MultiTrigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
        <Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
      </Trigger>
      <Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="False">
        <Setter TargetName="OpaqueRect" Property="Canvas.Top"
                Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
        <Setter TargetName="OpaqueRect" Property="Canvas.Left"
                Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type MenuItem}">
    <Setter Property="HorizontalContentAlignment"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Template"
            Value="{DynamicResource {ComponentResourceKey {x:Type MenuItem}, SubmenuItemTemplateKey}}"/>
    <Style.Triggers>
      <Trigger Property="Role" Value="TopLevelHeader">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey {x:Type MenuItem}, TopLevelHeaderTemplateKey}}"/>
        <Setter Property="Padding" Value="6,1"/>
      </Trigger>
      <Trigger Property="Role" Value="TopLevelItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey {x:Type MenuItem}, TopLevelItemTemplateKey}}"/>
        <Setter Property="Padding" Value="6,1"/>
      </Trigger>
      <Trigger Property="Role" Value="SubmenuHeader">
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey {x:Type MenuItem}, SubmenuHeaderTemplateKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type Menu}">
    <Setter Property="Background" Value="{StaticResource MenuBar.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource MenuBar.Static.Border}"/>
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="0,0,0,1"
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="True">
            <ItemsPresenter
              Margin="0,0,0,-1"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type ContextMenu}">
    <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Background" Value="#F0F0F0"/>
    <Setter Property="BorderBrush" Value="#979797"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="2"/>
    <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
    <Setter Property="HasDropShadow" Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <themes:SystemDropShadowChrome Name="Shdw"
                                         Color="Transparent"
                                         SnapsToDevicePixels="True">
            <Border Name="ContextMenuBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer Name="ContextMenuScrollViewer"
                            Margin="0"
                            Style="{DynamicResource {ComponentResourceKey {x:Type FrameworkElement}, MenuScrollViewer}}">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle
                      Name="OpaqueRect"
                      Height="{Binding ActualHeight, ElementName=ContextMenuBorder}"
                      Width="{Binding ActualWidth, ElementName=ContextMenuBorder}"
                      Fill="{Binding Background, ElementName=ContextMenuBorder}"/>
                  </Canvas>
                  <Rectangle HorizontalAlignment="Left"
                             Width="1"
                             Margin="30,2,0,2"
                             Fill="{StaticResource Menu.Static.Gutter}"/>
                  <ItemsPresenter Name="ItemsPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </themes:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow" Value="True">
              <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="Color" Value="#71000000"/>
            </Trigger>
            <Trigger SourceName="ContextMenuScrollViewer"
                     Property="ScrollViewer.CanContentScroll"
                     Value="False">
              <Setter TargetName="OpaqueRect"
                      Property="Canvas.Top"
                      Value="{Binding VerticalOffset, ElementName=ContextMenuScrollViewer}"/>
              <Setter TargetName="OpaqueRect"
                      Property="Canvas.Left"
                      Value="{Binding HorizontalOffset, ElementName=ContextMenuScrollViewer}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0"/>
  <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
  <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
  <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD"/>
  <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA"/>
  <SolidColorBrush x:Key="ScrollBar.MouseOver.Background2" Color="#C0C0C0"/>
  <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
  <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
  <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
  <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
  <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
  <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060"/>
  <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
  <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
  <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
  <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
  <SolidColorBrush x:Key="ScrollBar.Disabled.Thumb" Color="#F0F0F0"/>
  <Color x:Key="ScrollBar.Static.Background.Color">#F0F0F0</Color>
  <Color x:Key="ScrollBar.Static.Border.Color">#F0F0F0</Color>
  <Color x:Key="ScrollBar.Static.Glyph.Color">#606060</Color>
  <Color x:Key="ScrollBar.Static.Thumb.Color">#CDCDCD</Color>
  <Color x:Key="ScrollBar.MouseOver.Background.Color">#DADADA</Color>
  <Color x:Key="ScrollBar.MouseOver.Background2.Color">#C0C0C0</Color>
  <Color x:Key="ScrollBar.MouseOver.Border.Color">#DADADA</Color>
  <Color x:Key="ScrollBar.MouseOver.Glyph.Color">#000000</Color>
  <Color x:Key="ScrollBar.MouseOver.Thumb.Color">#A6A6A6</Color>
  <Color x:Key="ScrollBar.Pressed.Background.Color">#606060</Color>
  <Color x:Key="ScrollBar.Pressed.Border.Color">#606060</Color>
  <Color x:Key="ScrollBar.Pressed.Thumb.Color">#606060</Color>
  <Color x:Key="ScrollBar.Pressed.Glyph.Color">#FFFFFF</Color>
  <Color x:Key="ScrollBar.Disabled.Background.Color">#F0F0F0</Color>
  <Color x:Key="ScrollBar.Disabled.Border.Color">#F0F0F0</Color>
  <Color x:Key="ScrollBar.Disabled.Glyph.Color">#BFBFBF</Color>
  <Color x:Key="ScrollBar.Disabled.Thumb.Color">#F0F0F0</Color>

  <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}"
                     Width="{TemplateBinding Width}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="1"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border x:Name="border"
                  BorderThickness="1"
                  SnapsToDevicePixels="True"
                  Background="{StaticResource ScrollBar.Static.Background}"
                  BorderBrush="{StaticResource ScrollBar.Static.Border}">
            <ContentPresenter x:Name="contentPresenter"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Focusable="False"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Background"
                      Value="{StaticResource ScrollBar.MouseOver.Background}"/>
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{StaticResource ScrollBar.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Background"
                      Value="{StaticResource ScrollBar.Pressed.Background}"/>
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{StaticResource ScrollBar.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56"/>
              <Setter TargetName="border" Property="Background"
                      Value="{StaticResource ScrollBar.Disabled.Background}"/>
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{StaticResource ScrollBar.Disabled.Border}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle x:Name="rectangle"
                     SnapsToDevicePixels="True"
                     Fill="{StaticResource ScrollBar.Static.Thumb}"
                     Height="{TemplateBinding Height}"
                     Width="{TemplateBinding Width}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                  <VisualTransition To="Normal" GeneratedDuration="0:0:0.225"/>
                  <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.225"/>
                  <VisualTransition From="MouseOver" To="Normal" GeneratedDuration="0:0:1.275"/>
                  <VisualTransition To="Pressed" GeneratedDuration="0:0:0.150"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="rectangle"
                      Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                      <EasingColorKeyFrame Value="{StaticResource ScrollBar.MouseOver.Thumb.Color}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="rectangle"
                      Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                      <EasingColorKeyFrame Value="{StaticResource ScrollBar.Static.Thumb.Color}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="rectangle"
                      Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                      <EasingColorKeyFrame Value="{StaticResource ScrollBar.Pressed.Thumb.Color}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Rectangle>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="IsTabStop" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Rectangle x:Name="rectangle"
                     SnapsToDevicePixels="True"
                     Fill="{StaticResource ScrollBar.Static.Thumb}"
                     Height="{TemplateBinding Height}"
                     Width="{TemplateBinding Width}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                  <VisualTransition To="Normal" GeneratedDuration="0:0:0.225"/>
                  <VisualTransition To="MouseOver" GeneratedDuration="0:0:0.225"/>
                  <VisualTransition From="MouseOver" To="Normal" GeneratedDuration="0:0:1.275"/>
                  <VisualTransition To="Pressed" GeneratedDuration="0:0:0.150"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="rectangle"
                      Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                      <EasingColorKeyFrame Value="{StaticResource ScrollBar.MouseOver.Thumb.Color}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="rectangle"
                      Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                      <EasingColorKeyFrame Value="{StaticResource ScrollBar.Static.Thumb.Color}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <Storyboard>
                    <ColorAnimationUsingKeyFrames
                      Storyboard.TargetName="rectangle"
                      Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                      <EasingColorKeyFrame Value="{StaticResource ScrollBar.Pressed.Thumb.Color}"/>
                    </ColorAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Rectangle>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type ScrollBar}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="BorderThickness" Value="1,0"/>
    <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="MinWidth"
            Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid x:Name="Bg" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
              <RowDefinition
                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
              <RowDefinition Height="0.00001*"/>
              <RowDefinition
                MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
            </Grid.RowDefinitions>
            <Border
              BorderThickness="{TemplateBinding BorderThickness}"
              Grid.Row="1"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"/>
            <RepeatButton x:Name="PART_LineUpButton"
                          Command="{x:Static ScrollBar.LineUpCommand}"
                          Style="{StaticResource ScrollBarButton}">
              <Path x:Name="ArrowTop"
                    Data="M0,3.5 L0,6.5 L3.5,3 L7,6.5 L7,3.5 L3.5,0 z"
                    Stretch="Uniform"
                    Margin="3,3,3,3"
                    Fill="{StaticResource ScrollBar.Static.Glyph}"
                    SnapsToDevicePixels="True"
                    RenderOptions.EdgeMode="Aliased"/>
            </RepeatButton>
            <Track x:Name="PART_Track"
                   IsDirectionReversed="True"
                   Grid.Row="1">
              <Track.DecreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                              Style="{StaticResource RepeatButtonTransparent}"/>
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                              Style="{StaticResource RepeatButtonTransparent}"/>
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
              </Track.Thumb>
            </Track>
            <RepeatButton x:Name="PART_LineDownButton"
                          Command="{x:Static ScrollBar.LineDownCommand}"
                          Grid.Row="2"
                          Style="{StaticResource ScrollBarButton}">
              <Path x:Name="ArrowBottom"
                    Data="M0,3 L0,0 L3.5,3.5 L7,0 L7,3 3.5,6.5 z"
                    Stretch="Uniform"
                    Margin="3,3,3,3"
                    Fill="{StaticResource ScrollBar.Static.Glyph}"
                    RenderOptions.EdgeMode="Aliased"/>
            </RepeatButton>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="True"/>
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowBottom" Property="Fill"
                      Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="True"/>
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowTop" Property="Fill"
                      Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="True"/>
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowBottom" Property="Fill"
                      Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="True"/>
                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="False"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="ArrowTop" Property="Fill"
                      Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="ArrowTop" Property="Fill"
                      Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
              <Setter TargetName="ArrowBottom" Property="Fill"
                      Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Orientation" Value="Horizontal">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="Height"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="MinHeight"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid x:Name="Bg" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition
                    MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                  <ColumnDefinition Width="0.00001*"/>
                  <ColumnDefinition
                    MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="1"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"/>
                <RepeatButton x:Name="PART_LineLeftButton"
                              Command="{x:Static ScrollBar.LineLeftCommand}"
                              Style="{StaticResource ScrollBarButton}">
                  <Path x:Name="ArrowLeft"
                        Data="M0,3.5 L3.5,0 L6.5,0 L3,3.5 L6.5,7 L3.5,7 z"
                        Stretch="Uniform"
                        Margin="3,3,3,3"
                        Fill="{StaticResource ScrollBar.Static.Glyph}"
                        SnapsToDevicePixels="True"
                        RenderOptions.EdgeMode="Aliased"/>
                </RepeatButton>
                <Track x:Name="PART_Track" Grid.Column="1">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                  Style="{StaticResource RepeatButtonTransparent}"/>
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                  Style="{StaticResource RepeatButtonTransparent}"/>
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                  </Track.Thumb>
                </Track>
                <RepeatButton x:Name="PART_LineRightButton"
                              Grid.Column="2"
                              Command="{x:Static ScrollBar.LineRightCommand}"
                              Style="{StaticResource ScrollBarButton}">
                  <Path x:Name="ArrowRight"
                        Data="M3,7 L0,7 L3.5,3.5 L0,0 L3,0 L6.5,3.5 z"
                        Stretch="Uniform"
                        Margin="3,3,3,3"
                        Fill="{StaticResource ScrollBar.Static.Glyph}"
                        RenderOptions.EdgeMode="Aliased"/>
                </RepeatButton>
              </Grid>
              <ControlTemplate.Triggers>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="True"/>
                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="True"/>
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowRight" Property="Fill"
                          Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="True"/>
                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="True"/>
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowLeft" Property="Fill"
                          Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="True"/>
                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="False"/>
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowRight" Property="Fill"
                          Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="True"/>
                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="False"/>
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="ArrowLeft" Property="Fill"
                          Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter TargetName="ArrowLeft" Property="Fill"
                          Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                  <Setter TargetName="ArrowRight" Property="Fill"
                          Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="Aero2ListViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle
            Margin="1"
            Stroke="#FF341709"
            StrokeThickness="1"
            StrokeDashArray="1 1"
            SnapsToDevicePixels="True"
            RenderOptions.EdgeMode="Aliased"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FF828790"/>
  <SolidColorBrush x:Key="ListBox.MouseOver.Background" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="ListBox.MouseOver.Border" Color="#FF7EB4EA"/>
  <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>

  <SolidColorBrush x:Key="Item.Static.Background" Color="#FFFCFCFC"/>
  <SolidColorBrush x:Key="Item.Static.Border" Color="#FFFCFCFC"/>
  <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
  <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#A826A0DA"/>
  <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
  <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
  <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
  <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>

  <ControlTemplate x:Key="Aero2ListBoxScrollViewerTemplate"
                   TargetType="{x:Type ScrollViewer}">
    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel Margin="{TemplateBinding Padding}">
        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                KeyboardNavigation.DirectionalNavigation="Local"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
      </DockPanel>
      <ScrollBar x:Name="PART_HorizontalScrollBar"
                 Grid.Row="1"
                 Cursor="Arrow"
                 Margin="0,1,0,0"
                 Minimum="0.0"
                 Maximum="{TemplateBinding ScrollableWidth}"
                 Orientation="Horizontal"
                 Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                 ViewportSize="{TemplateBinding ViewportWidth}"
                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
      <ScrollBar x:Name="PART_VerticalScrollBar"
                 Grid.Column="1"
                 Cursor="Arrow"
                 Margin="1,0,0,0"
                 Minimum="0.0"
                 Maximum="{TemplateBinding ScrollableHeight}"
                 Orientation="Vertical"
                 Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                 ViewportSize="{TemplateBinding ViewportHeight}"
                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
      <DockPanel Grid.Column="1" Grid.Row="1"
                 Background="{Binding Background, ElementName=PART_VerticalScrollBar}"
                 LastChildFill="False">
      </DockPanel>
    </Grid>
  </ControlTemplate>

  <Style x:Key="Aero2ListBoxScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template" Value="{StaticResource Aero2ListBoxScrollViewerTemplate}"/>
  </Style>

  <ControlTemplate x:Key="Aero2ListBoxTemplate" TargetType="{x:Type ListBox}">
    <Border Name="Bd"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
      <ScrollViewer Padding="{TemplateBinding Padding}" Margin="1"
                    Style="{StaticResource Aero2ListBoxScrollViewer}">
        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
      </ScrollViewer>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBox.Disabled.Background}"/>
        <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBox.Disabled.Border}"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="True"/>
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type ListBox}">
    <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template" Value="{StaticResource Aero2ListBoxTemplate}"/>
  </Style>

  <Style TargetType="{x:Type ListBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Padding" Value="7,0"/>
    <Setter Property="HorizontalContentAlignment"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="FocusVisualStyle" Value="{DynamicResource FocusVisual}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <aero8:ListViewItemChrome x:Name="chrome"
                                    RenderMouseOver="{TemplateBinding IsMouseOver}"
                                    SnapsToDevicePixels="True">
            <ContentPresenter
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          </aero8:ListViewItemChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="chrome" Property="RenderSelected" Value="True"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="Selector.IsSelectionActive" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="chrome" Property="RenderInactive" Value="True"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="chrome" Property="RenderFocused" Value="True"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <LinearGradientBrush x:Key="Aero2GridViewColumnHeaderSeparatorBrush"
                       StartPoint="0,0" EndPoint="0,1">
    <LinearGradientBrush.GradientStops>
      <GradientStop Offset="0" Color="#FFDEE9F7"/>
      <GradientStop Offset="1" Color="#00DEE9F7"/>
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>

  <Style x:Key="Aero2GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-9"/>
    <Setter Property="Width" Value="18"/>
    <Setter Property="Height"
            Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Background" Value="{StaticResource Aero2GridViewColumnHeaderSeparatorBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent" Padding="{TemplateBinding Padding}">
            <Rectangle Width="1" HorizontalAlignment="Center" Fill="{TemplateBinding Background}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Aero2GridViewColumnHeader" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Background" Value="{x:Null}"/>
    <Setter Property="BorderBrush" Value="{x:Null}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Foreground" Value="#FF4C5B74"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="True">
            <aero8:GridViewColumnHeaderChrome x:Name="HeaderBorder" SeparatorVisibility="Hidden">
              <Border Padding="{TemplateBinding Padding}">
                <ContentPresenter Name="HeaderContent"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="0,0,0,1"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Border>
            </aero8:GridViewColumnHeaderChrome>
            <Canvas>
              <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource Aero2GridViewColumnHeaderGripper}"/>
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="HeaderBorder" Property="RenderMouseOver" Value="True"/>
              <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="HeaderBorder" Property="RenderPressed" Value="True"/>
              <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
              <Setter Property="MinHeight" Value="20"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Role" Value="Floating">
        <Setter Property="Opacity" Value="0.408"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas Name="PART_FloatingHeaderCanvas">
                <Rectangle Width="{TemplateBinding ActualWidth}"
                           Height="{TemplateBinding ActualHeight}"
                           Fill="#FF000000"
                           Opacity="0.469"/>
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="Role" Value="Padding">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Border Name="HeaderBorder" Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1"/>
              <ControlTemplate.Triggers>
                <Trigger Property="Height" Value="Auto">
                  <Setter Property="MinHeight" Value="20"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}" TargetType="{x:Type ListViewItem}"/>
  <Style x:Key="{x:Static GridView.GridViewStyleKey}" TargetType="{x:Type ListView}"/>

  <Style x:Key="Aero2GridViewItemStyle" TargetType="{x:Type ListViewItem}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource Aero2ListViewItemFocusVisual}"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Margin" Value="0,0,0,0"/>
    <Setter Property="Padding" Value="5,2,5,2"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <aero8:ListViewItemChrome x:Name="chrome"
                                    RenderMouseOver="{TemplateBinding IsMouseOver}"
                                    SnapsToDevicePixels="True">
            <GridViewRowPresenter
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
          </aero8:ListViewItemChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="chrome" Property="RenderSelected" Value="True"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="Selector.IsSelectionActive" Value="False"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="chrome" Property="RenderInactive" Value="True"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True"/>
                <Condition Property="IsMouseOver" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="chrome" Property="RenderFocused" Value="True"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="Aero2GridViewScrollViewer" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Padding}">
              <ScrollViewer DockPanel.Dock="Top"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden">
                <aero8:GridViewHeaderRowPresenterEx
                  Margin="1,0,1,0"
                  AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                  ColumnHeaderContainerStyle="{DynamicResource Aero2GridViewColumnHeader}"
                  ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                  ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                  ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                  ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                  ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                  Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </ScrollViewer>
              <ScrollContentPresenter
                x:Name="PART_ScrollContentPresenter"
                CanContentScroll="{TemplateBinding CanContentScroll}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                KeyboardNavigation.DirectionalNavigation="Local"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </DockPanel>
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                       Grid.Row="1"
                       Cursor="Arrow"
                       Margin="0,1,0,0"
                       Minimum="0.0"
                       Maximum="{TemplateBinding ScrollableWidth}"
                       Orientation="Horizontal"
                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       ViewportSize="{TemplateBinding ViewportWidth}"
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       Grid.Column="1"
                       Cursor="Arrow"
                       Margin="1,0,0,0"
                       Minimum="0.0"
                       Maximum="{TemplateBinding ScrollableHeight}"
                       Orientation="Vertical"
                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                       ViewportSize="{TemplateBinding ViewportHeight}"
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
            <DockPanel Grid.Column="1" Grid.Row="1"
                       Background="{Binding Background, ElementName=PART_VerticalScrollBar}"
                       LastChildFill="False">
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="Aero2GridViewTemplate" TargetType="{x:Type ListView}">
    <Border x:Name="Bd"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
      <ScrollViewer Padding="{TemplateBinding Padding}" Margin="1"
                    Style="{DynamicResource Aero2GridViewScrollViewer}">
        <ItemsPresenter Margin="0,0,0,1"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
      </ScrollViewer>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="IsGrouping" Value="True">
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter TargetName="Bd" Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>

  <Style TargetType="{x:Type ListView}">
    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    <Setter Property="BorderBrush" Value="#828790"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="ItemContainerStyle" Value="{DynamicResource Aero2GridViewItemStyle}"/>
    <Setter Property="Template" Value="{DynamicResource Aero2GridViewTemplate}"/>
    <Style.Triggers>
      <Trigger Property="ListView.View" Value="{x:Null}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource {x:Type ListBoxItem}}"/>
        <Setter Property="Template" Value="{StaticResource Aero2ListBoxTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>
