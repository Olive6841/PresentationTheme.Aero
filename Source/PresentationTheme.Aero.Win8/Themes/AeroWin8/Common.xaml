<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style x:Key="FocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle
            Margin="1"
            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
            StrokeThickness="1"
            StrokeDashArray="1 1"
            SnapsToDevicePixels="True"
            RenderOptions.EdgeMode="Aliased"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <SolidColorBrush x:Key="Button.Static.Border" Color="#FFACACAC"/>
  <LinearGradientBrush x:Key="Button.Static.Background" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStopCollection>
      <GradientStop Offset="0.000" Color="#FFF0F0F0"/>
      <GradientStop Offset="0.525" Color="#FFEAEAEA"/>
      <GradientStop Offset="1.055" Color="#FFE5E5E5"/>
    </GradientStopCollection>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF7EB4EA"/>
  <LinearGradientBrush x:Key="Button.MouseOver.Background" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStopCollection>
      <GradientStop Offset="0.0" Color="#FFECF4FC"/>
      <GradientStop Offset="0.5" Color="#FFE4F0FC"/>
      <GradientStop Offset="1.0" Color="#FFDCECFC"/>
    </GradientStopCollection>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF569DE5"/>
  <LinearGradientBrush x:Key="Button.Pressed.Background" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStopCollection>
      <GradientStop Offset="0.000" Color="#FFDAECFC"/>
      <!--<GradientStop Offset="0.500" Color="#FFCFE6FC"/>
      <GradientStop Offset="0.550" Color="#FFCEE5FC"/>-->
      <GradientStop Offset="0.50" Color="#FFCEE5FC"/>
      <GradientStop Offset="1.055" Color="#FFC4E0FC"/>
    </GradientStopCollection>
  </LinearGradientBrush>

  <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFD9D9D9"/>
  <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFEFEFEF"/>
  <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

  <SolidColorBrush x:Key="Button.Defaulted.Border" Color="#FF3399FF"/>
  <LinearGradientBrush x:Key="Button.Defaulted.Background" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientStopCollection>
      <GradientStop Offset="0.000" Color="#FFF0F0F0"/>
      <GradientStop Offset="0.525" Color="#FFEAEAEA"/>
      <GradientStop Offset="1.055" Color="#FFE5E5E5"/>
    </GradientStopCollection>
  </LinearGradientBrush>

  <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
    <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="6,4,6,4"/>
    <Setter Property="MinWidth" Value="10"/>
    <Setter Property="MinHeight" Value="5"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border"
                  Background="{TemplateBinding Background}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  SnapsToDevicePixels="True">
            <!--<VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualStateGroup.Transitions>
                  <VisualTransition To="MouseOver" GeneratedDuration="0:0:0"/>
                  <VisualTransition To="Normal" GeneratedDuration="0:0:0"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ColorAnimation Duration="0:0:0.5"
                                    Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="BorderBrush.Color"
                                    To="#FFACACAC"/>
                    <Aero2:LinearGradientBrushAnimation
                      Duration="0:0:0.5"
                      Storyboard.TargetName="border"
                      Storyboard.TargetProperty="Background"
                      From="{StaticResource Button.MouseOver.Background}"
                      To="{StaticResource Button.Static.Background}"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="MouseOver">
                  <Storyboard>
                    <ColorAnimation Duration="0:0:0.5"
                                    Storyboard.TargetName="border"
                                    Storyboard.TargetProperty="BorderBrush.Color"
                                    To="#FF7EB4EA"/>
                    <Aero2:LinearGradientBrushAnimation
                      Duration="0:0:0.5"
                      Storyboard.TargetName="border"
                      Storyboard.TargetProperty="Background"
                      From="{StaticResource Button.Static.Background}"
                      To="{StaticResource Button.MouseOver.Background}"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>-->
            <ContentPresenter x:Name="contentPresenter"
                              RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              Focusable="False">
            </ContentPresenter>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="border" Property="Background"
                      Value="{StaticResource Button.MouseOver.Background}"/>
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{StaticResource Button.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="border" Property="Background"
                      Value="{StaticResource Button.Pressed.Background}"/>
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{StaticResource Button.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="border" Property="Background"
                      Value="{StaticResource Button.Disabled.Background}"/>
              <Setter TargetName="border" Property="BorderBrush"
                      Value="{StaticResource Button.Disabled.Border}"/>
              <Setter TargetName="contentPresenter" Property="TextElement.Foreground"
                      Value="{StaticResource Button.Disabled.Foreground}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type ToggleButton}"
         BasedOn="{StaticResource BaseButtonStyle}"
         TargetType="{x:Type ToggleButton}"/>

  <Style x:Key="{x:Type RepeatButton}"
         BasedOn="{StaticResource BaseButtonStyle}"
         TargetType="{x:Type RepeatButton}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
  </Style>

  <Style x:Key="{x:Type Button}"
         BasedOn="{StaticResource BaseButtonStyle}"
         TargetType="{x:Type Button}"/>
</ResourceDictionary>
