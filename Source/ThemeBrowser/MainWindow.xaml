<Window x:Class="StyleInspector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StyleInspector"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:styleCore="clr-namespace:StyleCore;assembly=StyleCore"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance {x:Type local:MainWindowViewModel}}"
        x:Name="root"
        Title="MainWindow"
        Width="1200"
        Height="800"
        TextOptions.TextFormattingMode="Display"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True"
        FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}">
  <Window.Resources>
    <local:BindingProxy x:Key="DataContextProxy" Data="{Binding}"/>

    <GroupStyle x:Key="OriginGroupStyle">
      <GroupStyle.ContainerStyle>
        <Style TargetType="{x:Type GroupItem}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type GroupItem}">
                <Expander IsExpanded="True">
                  <Expander.Header>
                    <TextBlock FontWeight="Bold" Text="{Binding Items[0].SimpleOrigin}" Margin="5,0,0,0" Width="100"/>
                  </Expander.Header>
                  <Expander.Content>
                    <ItemsPresenter/>
                  </Expander.Content>
                </Expander>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </GroupStyle.ContainerStyle>
    </GroupStyle>
    <DataTemplate DataType="{x:Type local:ThemeFileViewModel}">
    </DataTemplate>
    <DataTemplate x:Key="ThemePropertyItem" DataType="{x:Type local:ThemePropertyViewModel}">
      <TextBlock Text="{Binding PropertyId}"/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:NamedItemContainer}">
    </DataTemplate>

    <local:ColorToBrushConverter x:Key="ColorToBrushConverter" IgnoreAlpha="True"/>

    <DataTemplate DataType="{x:Type Color}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Rectangle Width="16" Height="16" Fill="{Binding Converter={StaticResource ColorToBrushConverter}}"
                   Stroke="#FF999999" StrokeThickness="1"/>
        <TextBlock Grid.Column="1" Text="{Binding}" Margin="3,0,0,0"/>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:HighContrastColor}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Rectangle Width="16" Height="16" Fill="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                   Stroke="#FF999999" StrokeThickness="1"/>
        <TextBlock Grid.Column="1" Text="{Binding Color}" Margin="3,0,0,0"/>
        <TextBlock Grid.Column="2" Text="{Binding Index, StringFormat='({0})'}" Margin="3,0,0,0"/>
      </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ThemeBitmapViewModel}">
      <Grid x:Name="templateRoot" Background="Transparent">
        <Grid.ContextMenu>
          <ContextMenu>
            <MenuItem Header="Save Image…"
                      Command="{Binding Data.SaveImageCommand, Source={StaticResource DataContextProxy}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="Save Image (Unpremultiplied)…"
                      Command="{Binding Data.SaveUnpremultipliedImageCommand, Source={StaticResource DataContextProxy}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="Trace Image…"
                      Command="{Binding Data.TraceImageCommand, Source={StaticResource DataContextProxy}}"
                      CommandParameter="{Binding}"/>
            <MenuItem Header="Preview Image…"
                      Command="{Binding Data.PreviewImageCommand, Source={StaticResource DataContextProxy}}"
                      CommandParameter="{Binding}"/>
          </ContextMenu>
        </Grid.ContextMenu>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">
          <TextBlock>
            [Id: <Run Text="{Binding ImageId, Mode=OneWay}"/>]
            <Run Text="{Binding Bitmap.PixelWidth, Mode=OneWay}"/>x<Run Text="{Binding Bitmap.PixelHeight, Mode=OneWay}"/>
          </TextBlock>
          <TextBlock Text=" Zoom:"/>
          <Slider x:Name="ZoomSlider" Value="1" Minimum="1" Maximum="20" Width="100"
                  IsSnapToTickEnabled="True" TickFrequency="1"/>
          <TextBox IsReadOnly="True" FontFamily="Consolas"
                   Text="{Binding PixelColor, ElementName=imageColorPicker, Mode=OneWay}"/>
        </StackPanel>
        <Border Grid.Row="1" BorderThickness="1" BorderBrush="#CCCCCC"
                Background="{StaticResource CheckeredBrush}" Margin="5"
                HorizontalAlignment="Left">
          <Image x:Name="image" Source="{Binding Bitmap}" HorizontalAlignment="Left"
                 Stretch="Uniform" RenderOptions.BitmapScalingMode="NearestNeighbor">
            <i:Interaction.Behaviors>
              <local:ImageColorPickerBehavior x:Name="imageColorPicker"/>
            </i:Interaction.Behaviors>
            <Image.Width>
              <MultiBinding Converter="{StaticResource DoubleMultiplyConverter}">
                <MultiBinding.Bindings>
                  <Binding Path="Bitmap.Width"/>
                  <Binding ElementName="ZoomSlider" Path="Value"/>
                </MultiBinding.Bindings>
              </MultiBinding>
            </Image.Width>
          </Image>
        </Border>
      </Grid>
    </DataTemplate>

    <DataTemplate x:Key="PropertiesTemplate" DataType="{x:Type local:ThemePropertyContainer}">
      <Grid>
        <Grid.Resources>
          <CollectionViewSource x:Key="PropertiesView" Source="{Binding AllProperties}">
            <CollectionViewSource.GroupDescriptions>
              <PropertyGroupDescription PropertyName="SimpleOrigin"/>
            </CollectionViewSource.GroupDescriptions>
          </CollectionViewSource>
        </Grid.Resources>
        <DataGrid ItemsSource="{Binding Source={StaticResource PropertiesView}}" IsReadOnly="True"
                  AutoGenerateColumns="False" GridLinesVisibility="None">
          <DataGrid.GroupStyle>
            <StaticResource ResourceKey="OriginGroupStyle"/>
          </DataGrid.GroupStyle>
          <DataGrid.Columns>
            <DataGridTextColumn Header="Id" Binding="{Binding DisplayName}"/>
            <DataGridTextColumn Header="Type" Binding="{Binding DisplayPrimitiveType}"/>
            <DataGridTextColumn Header="Origin" Binding="{Binding Origin}"/>
            <DataGridTemplateColumn Header="Value" Width="*">
              <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                  <ContentPresenter Content="{Binding Value}"/>
                </DataTemplate>
              </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
          </DataGrid.Columns>
        </DataGrid>
      </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:ThemeClassViewModel}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PropertiesTemplate}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:ThemePartViewModel}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PropertiesTemplate}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type local:ThemeStateViewModel}">
      <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource PropertiesTemplate}"/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type ImageSource}">
      <Image Source="{Binding}"/>
    </DataTemplate>
  </Window.Resources>
  <DockPanel>
    <Menu DockPanel.Dock="Top">
      <MenuItem Header="_File">
        <MenuItem Header="_Open…" Command="{Binding OpenCommand}"/>
        <MenuItem Header="_Compare…" Command="{Binding CompareCommand}"/>
        <Separator/>
        <MenuItem Header="E_xit" Command="{Binding ExitCommand}"/>
      </MenuItem>
    </Menu>
    <Grid>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="2*"/>
      </Grid.ColumnDefinitions>
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition/>
        </Grid.RowDefinitions>
        <StackPanel Margin="7">
          <TextBlock Text="{Binding ThemeFile.FileName, StringFormat='File: {0}'}" ToolTip="{Binding ThemeFile.FilePath}"/>
          <TextBlock Text="{Binding ThemeFile.Version, StringFormat='Version: {0}'}"/>
          <TextBlock Text="{Binding ThemeFile.VariantMap.Name, StringFormat='Variant.Name: {0}'}"/>
          <TextBlock Text="{Binding ThemeFile.VariantMap.Size, StringFormat='Variant.Size: {0}'}"/>
          <TextBlock Text="{Binding ThemeFile.VariantMap.Color, StringFormat='Variant.Color: {0}'}"/>
        </StackPanel>
        <TreeView x:Name="treeView"
                  Grid.Row="1"
                  BorderThickness="0"
                  ItemsSource="{Binding ThemeFile.Classes}"
                  ContextMenuOpening="OnTreeViewContextMenuOpening">
          <TreeView.Resources>
            <HierarchicalDataTemplate DataType="{x:Type local:ThemeClassViewModel}"
                                      ItemsSource="{Binding Children}">
              <TextBlock Text="{Binding Name, Mode=OneWay}"/>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:ThemePartViewModel}"
                                      ItemsSource="{Binding States}">
              <TextBlock Text="{Binding DisplayName}"/>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:NamedItemContainer}"
                                      ItemsSource="{Binding Items}">
              <TextBlock Text="{Binding Name, Mode=OneWay}"/>
            </HierarchicalDataTemplate>
            <DataTemplate DataType="{x:Type local:ThemeStateViewModel}">
              <TextBlock Text="{Binding DisplayName}"/>
            </DataTemplate>
          </TreeView.Resources>
        </TreeView>
      </Grid>
      <GridSplitter Grid.Row="0" Grid.Column="1" Width="6" VerticalAlignment="Stretch" HorizontalAlignment="Center"/>

      <TabControl Grid.Row="0" Grid.Column="2">
        <TabItem Header="Selected">
          <ContentPresenter Content="{Binding Content}"/>
        </TabItem>
        <TabItem Header="All Properties">
          <DataGrid ItemsSource="{Binding AllProperties}" IsReadOnly="True"
                    AutoGenerateColumns="False"
                    ScrollViewer.CanContentScroll="False">
            <DataGrid.Columns>
              <DataGridTextColumn Header="Id" Binding="{Binding PropId}"/>
              <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
              <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
              <DataGridTextColumn Header="Origin" Binding="{Binding Origin}"/>
              <DataGridTemplateColumn Header="Value">
                <DataGridTemplateColumn.CellTemplate>
                  <DataTemplate>
                    <ContentControl Content="{Binding Value}"/>
                  </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
              </DataGridTemplateColumn>
            </DataGrid.Columns>
          </DataGrid>
        </TabItem>
        <TabItem Header="Transitions">
          <DataGrid ItemsSource="{Binding TransitionDurations}" IsReadOnly="True"/>
        </TabItem>
      </TabControl>
    </Grid>
  </DockPanel>
</Window>
